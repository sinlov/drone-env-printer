name: Docker Image buildx latest

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # name of docker image
  DOCKER_HUB_USER: sinlov
  IMAGE_NAME: drone-env-printer
#  DOCKER_IMAGE_PLATFORMS: linux/amd64,linux/386,linux/arm64/v8,linux/arm/v7

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        docker_image:
          - platform: linux/amd64
          - platform: linux/386
          - platform: linux/arm64
          - platform: linux/arm/v7
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.DOCKER_HUB_USER }}/${{ env.IMAGE_NAME }}
        tags: |
          # set latest tag for main branch
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: "Login into registry as user: env.DOCKER_HUB_USER"
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build dry
      uses: docker/build-push-action@v4 # https://github.com/docker/build-push-action
      with:
        context: .
        file: Dockerfile
        platforms: ${{ matrix.docker_image.platform }}
        no-cache: false
        pull: true
        push: false
    - name: Build and push
      id: docker_push
      uses: docker/build-push-action@v4 # https://github.com/docker/build-push-action
      with:
        context: .
        file: Dockerfile
        platforms: ${{ matrix.docker_image.platform }}
        outputs: type=image,name=${{ env.DOCKER_HUB_USER }}/${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true
        no-cache: false
        pull: true
        push: true
    - name: Export digest
      run: |
        mkdir -p /tmp/digests
        digest="${{ steps.docker_push.outputs.digest }}"
        touch "/tmp/digests/${digest#sha256:}"
    - name: Upload digest
      uses: actions/upload-artifact@v3
      with:
        name: digests
        path: /tmp/digests/*
        if-no-files-found: error
        retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_HUB_USER }}/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for main branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.DOCKER_HUB_USER }}/${{ env.IMAGE_NAME }}@sha256:%s ' *)
      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.DOCKER_HUB_USER }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}